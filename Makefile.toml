# =========================================================
# CARGO MAKE
# Documentation: https://sagiegurari.github.io/cargo-make
# =========================================================

# =========================================================
# ENV FILES
# =========================================================
# Load env files depending on our profile
# Values will be used in docker-compose.yaml
env_files = [
  { path = "./env/common.env" },
  { path = "./env/app.dev.env", profile = "development" },
  { path = "./env/app.prod.env", profile = "prod" },
  { path = "./env/db.dev.env", profile = "development" },
  { path = "./env/db.prod.env", profile = "prod" },
]

# Enable workspace support
# Documentation: https://github.com/sagiegurari/cargo-make#usage-workspace-support
[env]
CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = true

[env.development]
MODE = "dev"

[env.prod]
MDOE = "prod"

# =========================================================
# BUILD SCRIPTS
# =========================================================
[tasks.start]
# TODO:
# - Build tailwind once
# - Start frontennd
condition = { profiles = ["development"] }
dependencies = ["", "fe"]

[tasks.start-web]
condition = { profiles = ["development"] }
watch = { watch = ["./src/"] }
command = "trunk"
args = ["serve"]
dependencies = ["build-tw"]

[tasks.build-web]
workspace = false
condition = { profiles = ["prod"] }
command = "trunk"
args = ["build", "--dist", "backend/static/frontend", "frontend/index.html"]

[tasks.start-tw]
workspace = false
watch = { watch = [
  "./frontend/styles/index.css",
  "./frontend/src",
], ignore_pattern = "./frontend/**/tailwind.css" }
command = "docker"
args = ["compose", "up", "tailwind"]

[tasks.build-tw]
workspace = false
command = "docker"
args = ["compose", "up", "tailwind"]

[tasks.start-server]
workspace = false
condition = { profiles = ["development"] }
watch = { watch = ["./backend"] }
command = "cargo"
args = ["run", "-p", "backend"]

[tasks.build-server]
condition = { profiles = ["prod"] }
command = "cargo"
args = ["--release", "--bin", "backend"]

# =========================================================
# DOCKER COMPOSE
# =========================================================
[tasks.compose-build]
workspace = false
command = "docker"
args = ["compose", "build", "${@}"]

[tasks.compose-up]
workspace = false
command = "docker"
args = ["compose", "up", "${@}"]

[tasks.compose-logs]
workspace = false
command = "docker"
args = ["compose", "logs", "${@}"]

[tasks.compose-down]
workspace = false
command = "docker"
args = ["compose", "down", "${@}"]

[tasks.compose-start]
workspace = false
command = "docker"
args = ["compose", "start", "${@}"]

[tasks.compose-stop]
workspace = false
command = "docker"
args = ["compose", "stop", "${@}"]

[tasks.compose-rm]
workspace = false
command = "docker"
args = ["compose", "rm", "${@}"]

[tasks.compose-exec]
workspace = false
command = "docker"
args = ["compose", "exec", "${@}"]

[tasks.compose-ls]
workspace = false
command = "docker"
args = ["compose", "ls", "${@}"]

[tasks.compose-ps]
workspace = false
command = "docker"
args = ["compose", "ps", "${@}"]

[tasks.compose-images]
workspace = false
command = "docker"
args = ["compose", "images", "${@}"]
