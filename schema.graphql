"""
Implement the DateTime<Utc> scalar

The input/output is a string in RFC3339 format.
"""
scalar DateTime
enum Location {
	LIVING_ROOM
	KITCHEN
	DINING_ROOM
	BEDROOM
}
enum Person {
	JACOB
	MAGDA
	NONE
}
"""
A Plant lives in a location in the house, has a name, and has some instructions. It also knows when it was born and who watered it last
"""
type Plant {
	id: UUID!
	name: String!
	location: Location!
	birthday: DateTime!
	image: String!
	waterFrequency: Int!
	waterInstructions: String!
	lastWateredDate: DateTime!
	lastWateredBy: Person!
}
type QueryRoot {
	plants: Plant!
}
"""
A UUID is a unique 128-bit number, stored as 16 octets. UUIDs are parsed as Strings
within GraphQL. UUIDs are used to assign unique identifiers to entities without requiring a central
allocating authority.

# References

* [Wikipedia: Universally Unique Identifier](http://en.wikipedia.org/wiki/Universally_unique_identifier)
* [RFC4122: A Universally Unique IDentifier (UUID) URN Namespace](http://tools.ietf.org/html/rfc4122)
"""
scalar UUID
schema {
	query: QueryRoot
}
